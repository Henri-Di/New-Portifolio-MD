services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        APP_ENV: prod
    container_name: backend
    restart: unless-stopped
    environment:
      APP_ENV: prod
      DATABASE_URL: "mysql://appuser:apppassword@db:3306/portifolio_web"
    volumes:
      - ./backend:/var/www/html
    networks:
      - app-network
    expose:
      - "9000"

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./backend/public:/var/www/html/public:ro 
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

  frontend:
    build:
    context: ./frontend
    dockerfile: Dockerfile
    container_name: frontend
    restart: "no" # Build apenas uma vez
    networks:
      - app-network
    command: ["npm", "run", "build"]

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: portifolio_web
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword
    ports:
      - "3307:3306"  # Corrigido para evitar conflito com o MySQL local
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
